name: build,test,upload sql server

on: 
 #workflow_dispatch
  workflow_call:
    secrets:
      Workflow2_PAT_TOKEN_GITHUB:
        required: true


env:

 #SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL}}
 SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        #with:
         # fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
         path: ~\sonar\cache
         key: ${{ runner.os }}-sonar
         restore-keys: ${{ runner.os }}-sonar
          
      #- name: Cache SonarQube scanner
        #id: cache-sonar-scanner
        #uses: actions/cache@v1
        #with:
         # path: .\.sonar\scanner
         # key: ${{ runner.os }}-sonar-scanner
          #restore-keys: ${{ runner.os }}-sonar-scanner
          
      # name: Install SonarQube scanner
       #if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
       #shell: powershell
       #run: |
        # New-Item -Path .\.sonar\scanner -ItemType Directory
        # dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          
     #- name: Build and analyze
       #env:
      #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
       #shell: powershell
       #run: |
        # .\.sonar\scanner\dotnet-sonarscanner begin /k:"sql-server-test" /d:sonar.login=admin -d sonar.password=admin123
         #  dotnet build
      
      - name: Run SonarQube Scan
        run: |
          echo "SONAR URL - > " ${{vars.SONAR_HOST_URL}}
          #export SONAR_TOKEN=${{ secrets.SONAR_TOKEN }}
          export SONAR_HOST_URL=${{vars.SONAR_HOST_URL}}
          mvn install sonar:sonar \
            -D sonar.projectKey=sql-server-test \
            -D sonar.host.url=$SONAR_HOST_URL \
            -D sonar.login=admin -D sonar.password=admin123
         
      - name: Push Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: sqldb
          path: ${{ github.workspace }}/bin/Debug/ 
